package fr.fiducial.signature.feature.clients.model;
// Generated Mar 1, 2019 11:53:13 AM by Hibernate Tools 5.2.11.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Personne generated by hbm2java
 */
@Entity
@Table(name = "personne", catalog = "signature_clients")
public class Personne implements java.io.Serializable {

	private Long id;
	private Capacite capacite;
	private Coordonnees coordonnees;
	private Pays pays;
	private Statut statut;
	private Ville ville;
	private boolean estClient;
	private String civilite;
	private String nom;
	private String prenoms;
	private Date dateNaissance;
	private String nationalite;
	private String profession;
	private String nomUsuel;
	private String prenomUsuel;
	private Long idEtatMaritalPacs;
	private String clercReferent;
	private String notaireReferent;
	private Date dateModifFiche;
	private Long idCoordonnes;
	private Long idDeces;
	private Set<Historique> historiques = new HashSet<Historique>(0);
	private Set<Document> documents = new HashSet<Document>(0);
	private Set<Adresse> adresses = new HashSet<Adresse>(0);
	private Set<Evenement> evenementsForIdConjoint = new HashSet<Evenement>(0);
	private Set<Evenement> evenementsForIdClient = new HashSet<Evenement>(0);

	public Personne() {
	}

	public Personne(boolean estClient, String nom) {
		this.estClient = estClient;
		this.nom = nom;
	}

	public Personne(Capacite capacite, Coordonnees coordonnees, Pays pays, Statut statut, Ville ville,
			boolean estClient, String civilite, String nom, String prenoms, Date dateNaissance, String nationalite,
			String profession, String nomUsuel, String prenomUsuel, Long idEtatMaritalPacs, String clercReferent,
			String notaireReferent, Date dateModifFiche, Long idCoordonnes, Long idDeces, Set<Historique> historiques,
			Set<Document> documents, Set<Adresse> adresses, Set<Evenement> evenementsForIdConjoint,
			Set<Evenement> evenementsForIdClient) {
		this.capacite = capacite;
		this.coordonnees = coordonnees;
		this.pays = pays;
		this.statut = statut;
		this.ville = ville;
		this.estClient = estClient;
		this.civilite = civilite;
		this.nom = nom;
		this.prenoms = prenoms;
		this.dateNaissance = dateNaissance;
		this.nationalite = nationalite;
		this.profession = profession;
		this.nomUsuel = nomUsuel;
		this.prenomUsuel = prenomUsuel;
		this.idEtatMaritalPacs = idEtatMaritalPacs;
		this.clercReferent = clercReferent;
		this.notaireReferent = notaireReferent;
		this.dateModifFiche = dateModifFiche;
		this.idCoordonnes = idCoordonnes;
		this.idDeces = idDeces;
		this.historiques = historiques;
		this.documents = documents;
		this.adresses = adresses;
		this.evenementsForIdConjoint = evenementsForIdConjoint;
		this.evenementsForIdClient = evenementsForIdClient;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_capacite")
	public Capacite getCapacite() {
		return this.capacite;
	}

	public void setCapacite(Capacite capacite) {
		this.capacite = capacite;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_coordonnees")
	public Coordonnees getCoordonnees() {
		return this.coordonnees;
	}

	public void setCoordonnees(Coordonnees coordonnees) {
		this.coordonnees = coordonnees;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_pays_naissance")
	public Pays getPays() {
		return this.pays;
	}

	public void setPays(Pays pays) {
		this.pays = pays;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_statut")
	public Statut getStatut() {
		return this.statut;
	}

	public void setStatut(Statut statut) {
		this.statut = statut;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_ville_naissance")
	public Ville getVille() {
		return this.ville;
	}

	public void setVille(Ville ville) {
		this.ville = ville;
	}

	@Column(name = "est_client", nullable = false)
	public boolean isEstClient() {
		return this.estClient;
	}

	public void setEstClient(boolean estClient) {
		this.estClient = estClient;
	}

	@Column(name = "civilite", length = 10)
	public String getCivilite() {
		return this.civilite;
	}

	public void setCivilite(String civilite) {
		this.civilite = civilite;
	}

	@Column(name = "nom", nullable = false, length = 200)
	public String getNom() {
		return this.nom;
	}

	public void setNom(String nom) {
		this.nom = nom;
	}

	@Column(name = "prenoms", length = 200)
	public String getPrenoms() {
		return this.prenoms;
	}

	public void setPrenoms(String prenoms) {
		this.prenoms = prenoms;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date_naissance", length = 10)
	public Date getDateNaissance() {
		return this.dateNaissance;
	}

	public void setDateNaissance(Date dateNaissance) {
		this.dateNaissance = dateNaissance;
	}

	@Column(name = "nationalite", length = 50)
	public String getNationalite() {
		return this.nationalite;
	}

	public void setNationalite(String nationalite) {
		this.nationalite = nationalite;
	}

	@Column(name = "profession", length = 200)
	public String getProfession() {
		return this.profession;
	}

	public void setProfession(String profession) {
		this.profession = profession;
	}

	@Column(name = "nom_usuel", length = 200)
	public String getNomUsuel() {
		return this.nomUsuel;
	}

	public void setNomUsuel(String nomUsuel) {
		this.nomUsuel = nomUsuel;
	}

	@Column(name = "prenom_usuel", length = 200)
	public String getPrenomUsuel() {
		return this.prenomUsuel;
	}

	public void setPrenomUsuel(String prenomUsuel) {
		this.prenomUsuel = prenomUsuel;
	}

	@Column(name = "id_etat_marital_PACS")
	public Long getIdEtatMaritalPacs() {
		return this.idEtatMaritalPacs;
	}

	public void setIdEtatMaritalPacs(Long idEtatMaritalPacs) {
		this.idEtatMaritalPacs = idEtatMaritalPacs;
	}

	@Column(name = "clerc_referent", length = 200)
	public String getClercReferent() {
		return this.clercReferent;
	}

	public void setClercReferent(String clercReferent) {
		this.clercReferent = clercReferent;
	}

	@Column(name = "notaire_referent", length = 200)
	public String getNotaireReferent() {
		return this.notaireReferent;
	}

	public void setNotaireReferent(String notaireReferent) {
		this.notaireReferent = notaireReferent;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date_modif_fiche", length = 10)
	public Date getDateModifFiche() {
		return this.dateModifFiche;
	}

	public void setDateModifFiche(Date dateModifFiche) {
		this.dateModifFiche = dateModifFiche;
	}

	@Column(name = "id_coordonnes")
	public Long getIdCoordonnes() {
		return this.idCoordonnes;
	}

	public void setIdCoordonnes(Long idCoordonnes) {
		this.idCoordonnes = idCoordonnes;
	}

	@Column(name = "id_deces")
	public Long getIdDeces() {
		return this.idDeces;
	}

	public void setIdDeces(Long idDeces) {
		this.idDeces = idDeces;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personne")
	public Set<Historique> getHistoriques() {
		return this.historiques;
	}

	public void setHistoriques(Set<Historique> historiques) {
		this.historiques = historiques;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personne")
	public Set<Document> getDocuments() {
		return this.documents;
	}

	public void setDocuments(Set<Document> documents) {
		this.documents = documents;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personne")
	public Set<Adresse> getAdresses() {
		return this.adresses;
	}

	public void setAdresses(Set<Adresse> adresses) {
		this.adresses = adresses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personneByIdConjoint")
	public Set<Evenement> getEvenementsForIdConjoint() {
		return this.evenementsForIdConjoint;
	}

	public void setEvenementsForIdConjoint(Set<Evenement> evenementsForIdConjoint) {
		this.evenementsForIdConjoint = evenementsForIdConjoint;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personneByIdClient")
	public Set<Evenement> getEvenementsForIdClient() {
		return this.evenementsForIdClient;
	}

	public void setEvenementsForIdClient(Set<Evenement> evenementsForIdClient) {
		this.evenementsForIdClient = evenementsForIdClient;
	}

}
