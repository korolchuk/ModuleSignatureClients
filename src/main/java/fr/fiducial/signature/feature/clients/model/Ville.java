package fr.fiducial.signature.feature.clients.model;
// Generated Mar 1, 2019 11:53:13 AM by Hibernate Tools 5.2.11.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Ville generated by hbm2java
 */
@Entity
@Table(name = "ville", catalog = "signature_clients")
public class Ville implements java.io.Serializable {

	private Long id;
	private String cp;
	private String nom;
	private Set<Evenement> evenements = new HashSet<Evenement>(0);
	private Set<Personne> personnes = new HashSet<Personne>(0);
	private Set<Adresse> adresses = new HashSet<Adresse>(0);

	public Ville() {
	}

	public Ville(String nom) {
		this.nom = nom;
	}

	public Ville(String cp, String nom, Set<Evenement> evenements, Set<Personne> personnes, Set<Adresse> adresses) {
		this.cp = cp;
		this.nom = nom;
		this.evenements = evenements;
		this.personnes = personnes;
		this.adresses = adresses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "cp", length = 5)
	public String getCp() {
		return this.cp;
	}

	public void setCp(String cp) {
		this.cp = cp;
	}

	@Column(name = "nom", nullable = false, length = 200)
	public String getNom() {
		return this.nom;
	}

	public void setNom(String nom) {
		this.nom = nom;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ville")
	public Set<Evenement> getEvenements() {
		return this.evenements;
	}

	public void setEvenements(Set<Evenement> evenements) {
		this.evenements = evenements;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ville")
	public Set<Personne> getPersonnes() {
		return this.personnes;
	}

	public void setPersonnes(Set<Personne> personnes) {
		this.personnes = personnes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ville")
	public Set<Adresse> getAdresses() {
		return this.adresses;
	}

	public void setAdresses(Set<Adresse> adresses) {
		this.adresses = adresses;
	}

}
